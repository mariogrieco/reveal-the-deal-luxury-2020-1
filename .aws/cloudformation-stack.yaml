AWSTemplateFormatVersion: '2010-09-09'

Description: Static website

Parameters:
  DomainName:
    Description: Domain name of website
    Type: String
  Domains:
    Description: Website domains
    Type: CommaDelimitedList
    Default: ''

Conditions:
  HasDomains: !Not [!Equals [!Join ['', !Ref Domains], '']]

Resources:
  S3BucketRoot:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: Private
      BucketName: !Ref DomainName
      WebsiteConfiguration:
        ErrorDocument: '404.html'
        IndexDocument: 'index.html'

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketRoot
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action: 's3:GetObject'
            Principal:
              CanonicalUser:
                Fn::GetAtt: [ CloudFrontOriginIdentity , S3CanonicalUserId ]
            Resource: !Join ['', ['arn:aws:s3:::', !Ref S3BucketRoot, '/*']]
          - Effect: 'Allow'
            Principal:
              AWS: !GetAtt DeployerIAMUser.Arn
            Action: 's3:ListBucket'
            Resource: !Join ['', ['arn:aws:s3:::', !Ref S3BucketRoot]]
          - Effect: 'Allow'
            Principal:
              AWS: !GetAtt DeployerIAMUser.Arn
            Action: ['s3:DeleteObject', 's3:GetObject', 's3:PutObject']
            Resource: !Join ['', ['arn:aws:s3:::', !Ref S3BucketRoot, '/*']]

  CertificateManagerCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      SubjectAlternativeNames:
        !If
        - HasDomains
        - !Ref Domains
        - !Ref AWS::NoValue
      ValidationMethod: DNS

  CloudFrontOriginIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "access-identity-${DomainName}.s3.amazonaws.com"

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          !If
          - HasDomains
          - !Split [":", !Join [':', [!Ref DomainName, !Join [":", !Ref Domains]]]]
          - [!Ref DomainName]
        CustomErrorResponses:
          - ErrorCachingMinTTL: 300
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: '/'
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: true
          MaxTTL: 31536000
          SmoothStreaming: false
          TargetOriginId: !Sub 'S3-${DomainName}'
          ViewerProtocolPolicy: 'redirect-to-https'
        DefaultRootObject: 'index.html'
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName: !Sub '${DomainName}.s3.amazonaws.com'
            Id: !Sub 'S3-${DomainName}'
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginIdentity}"
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateManagerCertificate
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only

  DeployerIAMUser:
    Type: AWS::IAM::User
    DeletionPolicy: Delete
    Properties:
      Groups:
        - Deployer
      UserName: !Sub '${AWS::StackName}.deployer'
